#!/bin/bash
set -u
trap "echo Script terminated with non-zero: $?" ERR

calculateTreeDist() {
  ref_T="${DB_FOLDER}/00.ReferenceTrees/$1.unroot.tree"
  tmp_trees="tmp.trees"  
  
  input_T=$2
  method=$3
  
#calculate tree distance
  if [ -e $ref_T ] && [ -e $input_T ]
  then
    cat $ref_T $input_T > $tmp_trees
    echo -e "$tmp_trees\nD\nY\n" | treedist > /dev/null
    grep "Trees 1 and 2" outfile|awk '{printf "'$method' %.3f\n",$5}' >> values.txt
    rm outfile $tmp_trees
  else
    echo "ERROR $ref_T or $input_T not exist"
  fi
}


tip_p=$1
var_p=$2
len=$3
aln=$4
filter=$5
set_p=$(printf "%03d" $SGE_TASK_ID)

aln_f="${DATA_FOLDER}/$tip_p/$var_p/len$len/set$set_p/$filter/$aln/MSA.phylip"
out_p="${DATA_FOLDER}/$tip_p/$var_p/len$len/set$set_p/$filter/$aln/"

phyml_cmd="phyml --quiet -d aa -m JTT -a e -v e" #Amino Acid, JTT+I+Gamma mode
ML_f="MaxLikelihood.nwk"

#
# Move to the scratch DIR
# 
cd $TMPDIR


if [ -e $aln_f ]
then
  echo "process $aln_f"

    
#build maximum likelihood tree
  $phyml_cmd -i $aln_f &> /dev/null
  mv $aln_f\_phyml_tree.txt $ML_f
  rm $aln_f\_phyml_stats.txt
    

  calculateTreeDist $tip_p/$var_p $ML_f RFDistML
  
  # Copy the result files
  [ ! -e $out_p ] && mkdir -p $out_p
  [ -e "$out_p/values.txt" ] && rm "$out_p/values.txt"
  
  mv $ML_f $out_p
  mv values.txt $out_p
  
else
  echo "ERROR $aln_f not exist"
fi
